#ifndef SGUI_RESOURCE_CHECK_H
#define SGUI_RESOURCE_CHECK_H
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 检查分配与释放的情况(如果需要): */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#if 1
#include <stdio.h>
#include <stdlib.h>

static inline void * SGui_Alloc(uint32_t Size, int8_t *File, uint32_t Line)
{
    void *Pointer = malloc(Size);
    printf("SGui_Alloc: [%s][%u][%p][%u]\n", File, Line, Pointer, Size);
    return Pointer;
}
static inline void SGui_Free(void *Pointer, int8_t *File, uint32_t Line)
{
    printf("SGui_Free:  [%s][%u][%p]\n", File, Line, Pointer);
    free(Pointer);
}
#else
static inline void * SGui_Alloc(uint32_t Size, int8_t *File, uint32_t Line)
{
    return malloc(Size);
}
static inline void SGui_Free(void *Pointer, int8_t *File, uint32_t Line)
{
    free(Pointer);
}
#endif
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#define SGUI_ALLOC(Size)   SGui_Alloc(Size,   __FILE__, __LINE__)
#define SGUI_FREE(Pointer) SGui_Free(Pointer, __FILE__, __LINE__)
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
