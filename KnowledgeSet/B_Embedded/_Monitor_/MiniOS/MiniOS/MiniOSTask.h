#ifndef MINI_OS_TASK_H
#define MINI_OS_TASK_H
//C std lib
#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 这是一个模拟的OS,其中许多组件是拼凑出来的,未重新实现 */
/* 因为它并不具备现场保护与还原,所以线程的实现方式也有点特别 */
/* 而对于平常的那种互斥保护也是直接使用临界区代替,因为它本身就是一个单线程 */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#define MiniOS_TaskHandle       void *
#define MiniOS_TaskEventNone    0
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
MiniOS_TaskHandle MiniOS_TaskCreate(void (*TaskHandle)(uint32_t Event), uint8_t Priority);
void MiniOS_TaskDestroy(MiniOS_TaskHandle Handle);
void MiniOS_TaskToggle(MiniOS_TaskHandle Handle, uint32_t Event);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
void MiniOS_ScheduleReady(void);
void MiniOS_ScheduleExecute(void);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
