#ifndef CRITICAL_ZONE_H
#define CRITICAL_ZONE_H
//C std lib
#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 注意的是不同的平台这一步流程不一定一致 */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
typedef struct InterruptRegisterSet {
    /* 中断相关寄存器集合 */
    uint32_t Status1;
    uint32_t Status2;
    /* ...... */
} IrqRegSet;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#define CriticalZoneEnter(IrqRegSetName)                        \
do {/* 进入临界区一般有俩步 */                                  \
    /* 使用汇编指令记录中断相关的寄存器,保存到本地 */           \
    IrqRegSet IrqRegSetName = {0}; /* 读取并保存 */             \
    /* 使用汇编指令禁用全局中断(如拉高中断响应门限等) */        \
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#define CriticalZoneExit(IrqRegSetName)                         \
    /* 退出临界区一般有俩步 */                                  \
    /* 使用汇编指令还原中断相关的寄存器,获取从本地 */           \
    IrqRegSetName; /* 获取并写入 */                             \
    /* 使用汇编指令启用全局中断(如还原中断响应门限等) */        \
} while (0)                                                     \
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
