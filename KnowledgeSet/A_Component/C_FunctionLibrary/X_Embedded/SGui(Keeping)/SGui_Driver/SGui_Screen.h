#ifndef SGUI_SCREEN_H
#define SGUI_SCREEN_H
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 目标:针对于最终绘制的封装 */
/* 层级:显示驱动层 */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 屏幕驱动初始化与反初始化(启动与关闭) */
void SGui_ScreenInit(void);
void SGui_ScreenDeinit(void);
/* 屏幕的宽与高(绘制应该总是使用的第四象限) */
uint32_t SGui_ScreenWidth(void);
uint32_t SGui_ScreenHeight(void);
/* 获得屏幕的一个虚拟映射,根据平台实际内存资源分配 */
/* 可以准备多块虚拟映射,交叉分配,用以最大限度降低I/O迟延 */
void SGui_ScreenTakeMap(SGui_Pixel **Pixel, uint32_t *Length, uint32_t *Width, uint32_t *Height);
void SGui_ScreenGiveMap(SGui_Pixel  *Pixel);
/* 屏幕的帧锁定和帧解锁 */
/* 每一帧图像的绘制总是由帧锁开始,帧解锁结束 */
void SGui_ScreenFrameLock(void);
void SGui_ScreenFrameUnlock(void);
/* 屏幕处理一个画布 */
void SGui_ScreenCanvas(SGui_Canvas *Canvas);
void SGui_ScreenCanvasSync(void);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
