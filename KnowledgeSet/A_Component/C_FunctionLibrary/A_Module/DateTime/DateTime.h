#ifndef DATE_TIME_H
#define DATE_TIME_H
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#include <stdint.h>
#include <stdbool.h>
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 闰年检查 */
static inline bool DateTime_IsLeapYear(uint32_t Year)
{
    return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 一个月有多少天 */
static inline uint32_t DateTime_InMonth(bool IsLeapYear, uint32_t Month)
{
    return Month == 2 ? IsLeapYear ? 29 : 28 :
           Month == 7 ? 31 : Month % 7 % 2 == 0 ? 30 : 31;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 一年过了多少天 */
static inline uint32_t DateTime_PassBy(uint32_t Year, uint32_t Month, uint32_t Day)
{
    uint32_t Days = Day;
    bool Leap = DateTime_IsLeapYear(Year);
    for (uint32_t I = 1; I < Month; I++)
        Days += DateTime_InMonth(Leap, I);
    return Days;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 这是星期几(蔡勒公式:(日一二三四五六:[0, 6])) */
static inline uint32_t DateTime_ToWeek(uint32_t Year, uint32_t Month, uint32_t Day)
{
    uint32_t Y = Year % 100;
    uint32_t C = Year / 100;
    uint32_t M = Month;
    uint32_t D = Day;
    if (M == 1 || M == 2) {
        M += 12;
        Y--;
    }
    return (Y + Y / 4 + C / 4 - 2 * C + 13 * (M + 1) / 5 + D - 1) % 7;//蔡勒公式
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 俩个日期间的天数 */
static inline uint32_t DateTime_HowManyDays(uint32_t Year1, uint32_t Month1, uint32_t Day1,
                                            uint32_t Year2, uint32_t Month2, uint32_t Day2)
{
    if (!(Year1 <= Year2 || Month1 <= Month2 || Day1 <= Day2))
        return -1;
    uint32_t Days = 0;
    /* 计算中间年份 */
    for (uint32_t Year = Year1 + 1; Year <= Year2 - 1; Year++)
        Days += DateTime_IsLeapYear(Year) ? 366 : 365;
    Days += Year1 == Year2 ? 0 : DateTime_IsLeapYear(Year1) ? 366 : 365;
    Days += DateTime_PassBy(Year2, Month2, Day2) -
            DateTime_PassBy(Year1, Month1, Day1);
    return Days;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* UTC转化 */
static inline uint64_t DateTime_ToUTC(uint32_t Year, uint32_t Month,  uint32_t Day,
                                      uint32_t Hour, uint32_t Minute, uint32_t Second)
{
    const uint32_t B_Year = 1970, B_Month = 1,  B_Day = 1;
    const uint32_t B_Hour = 0,    B_Minute = 0, B_Second = 0;
    
    return DateTime_HowManyDays(B_Year, B_Month, B_Day, Year, Month, Day)
           * 24 * 60 * 60 +
           Hour * 60 * 60 + Minute * 60 + Second -
           B_Hour * 60 * 60 + B_Minute * 60 + B_Second;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
