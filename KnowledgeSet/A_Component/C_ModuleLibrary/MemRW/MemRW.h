#ifndef MEMORY_READ_WRITE_H
#define MEMORY_READ_WRITE_H
// C std lib
#include <stdint.h>
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
/* 去争议该辅助组件的必要性本身是一件无意义的事情 */
/* 但不可否认的一点,这个小小的组件可以在简化代码上提供意想不到的帮助 */
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline uint8_t MemReadByte1(void *Address)
{
    return *((volatile uint8_t *)Address);
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline uint16_t MemReadByte2(void *Address)
{
    return *((volatile uint16_t *)Address);
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline uint32_t MemReadByte4(void *Address)
{
    return *((volatile uint32_t *)Address);
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline uint64_t MemReadByte8(void *Address)
{
    return *((volatile uint64_t *)Address);
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline void MemWriteByte1(void *Address, uint8_t Data)
{
    *((volatile uint8_t *)Address) = Data;
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline void MemWriteByte2(void *Address, uint16_t Data)
{
    *((volatile uint16_t *)Address) = Data;
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline void MemWriteByte4(void *Address, uint32_t Data)
{
    *((volatile uint32_t *)Address) = Data;
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
static inline void MemWriteByte8(void *Address, uint64_t Data)
{
    *((volatile uint64_t *)Address) = Data;
}
/*****************************************************************************/
/*****************************************************************************/
/*****************************************************************************/
#endif
