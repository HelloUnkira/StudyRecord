#ifndef SGUI_BASIC_GRAPH_H
#define SGUI_BASIC_GRAPH_H
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 目标:定义简洁通配的基本图元 */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:坐标点 */
#define SimpleGui_Coord int16_t
typedef SimpleGui_Coord SGui_Coord;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:坐标 */
typedef struct SimpleGui_Dot {
    SGui_Coord X;    //横坐标
    SGui_Coord Y;    //纵坐标
} SGui_Dot;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:区域 */
typedef struct SimpleGui_Area {
    SGui_Dot LU;     //左上角坐标(Left,  Up)
    SGui_Dot RB;     //右下角坐标(Right, Down)
} SGui_Area;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:透明度 */
#define SimpleGui_Alpha uint8_t
typedef SimpleGui_Alpha SGui_Alpha;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:颜色 */
#define SimpleGui_Color uint32_t
typedef SimpleGui_Color SGui_Color;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:像素类型 */
typedef enum SimpleGui_PixelType {
    SGui_PixelIsDefault = 0,    /* 占位符 */
    SGui_PixelIsPure,           /* 纯色:此时只需要Alpha通道即可完成数据融合 */
    SGui_PixelIsGrey,           /* 灰度:此时只需要Color通道即可完成数据融合 */
    SGui_PixelIsNormal,         /* 基础:此时为完整的像素点数据 */
} SGui_PixelType;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:像素 */
typedef struct SimpleGui_Pixel {
    uint32_t        Element;    /* 像素点大小 */
    SGui_PixelType  Type;       /* 像素类型 */
    SGui_Alpha      Alpha;      /* 属性扩充:如果是纯色图,额外携带Alpha通道数据 */
    SGui_Color      Color;      /* 属性扩充:如果是灰度图,额外携带Color通道数据 */
} SGui_Pixel;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元描述:画布 */
typedef struct SimpleGui_Canvas {
    SGui_Pixel Pixel;   /* 像素描述 */
    void      *Stream;  /* 像素流(矩阵或点) */
    uint32_t   Height;  /* 像素矩阵高 */
    uint32_t   Width;   /* 像素矩阵宽 */
    SGui_Area  Clip;    /* 绘制空间剪切域 */
} SGui_Canvas;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 基本图元内嵌功能: */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 非法坐标点值(这里随意指定一个最大或最小值) */
#define SGUI_COORD_INVALID  ((SGui_Coord)0x8000)
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 坐标重置 */
static inline void SGui_DotReset(SGui_Dot *Dot)
{
    Dot->X = SGUI_COORD_INVALID;
    Dot->Y = SGUI_COORD_INVALID;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 坐标设置 */
static inline void SGui_DotSet(SGui_Dot *Dot, SGui_Coord X, SGui_Coord Y)
{
    Dot->X = X;
    Dot->Y = Y;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 区域重置 */
static inline void SGui_AreaReset(SGui_Area *Area)
{
    Area->LU.X = SGUI_COORD_INVALID;
    Area->LU.Y = SGUI_COORD_INVALID;
    Area->RB.X = SGUI_COORD_INVALID;
    Area->RB.Y = SGUI_COORD_INVALID;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 区域设置 */
static inline void SGUI_AreaSet(SGui_Area *Area, SGui_Coord LU_X, SGui_Coord LU_Y,
                                                 SGui_Coord RB_X, SGui_Coord RB_Y)
{
    Area->LU.X = LU_X;
    Area->LU.Y = LU_Y;
    Area->RB.X = RB_X;
    Area->RB.Y = RB_Y;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 这是一个参考模板,批量处理像素点时不应该直接调用本接口 */
/* 转化画布中像素点偏移量(Dot取值范围[0,Height - 1][0,Width - 1]) */
static inline void * SGui_CanvasOffset(SGui_Canvas *Canvas, SGui_Dot *Dot)
{
    /* 绘制空间布局配置:高宽布局:1; */
    return (void *)&((uint8_t *)Canvas->Stream)[Dot->X + Dot->Y * Canvas->Width];
    /* 绘制空间布局配置:宽高布局;(通常不会用到后者) */
    return (void *)&((uint8_t *)Canvas->Stream)[Dot->Y + Dot->X * Canvas->Height];
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
