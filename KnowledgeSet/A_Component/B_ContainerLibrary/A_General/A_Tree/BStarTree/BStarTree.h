#ifndef B_STAR_TREE_H
#define B_STAR_TREE_H
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//用于维护非实体外的数据结构
#include <stdlib.h>
//B*树需要额外的动态内存分配接口用于内部生成维护空间
#define BST_ALLOC(size)    malloc(size)
#define BST_FREE(pointer)  free(pointer)
//如果上述接口不能正确提供,B*树不能正常工作
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//辅助构建:获得集合和容器的大小
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
uint32_t BST_GetBytes_Set(void);
uint32_t BST_GetBytes_Container(void);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//辅助构建:数据集转化关键字
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
typedef uint32_t (*BST_DataKey)(void *DataStruct);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//辅助构建:设置集合的参数
void BST_SetTree(void *Tree, uint32_t Length, BST_DataKey Key);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//核心动作:插入,删除
void BST_InsertNode(void *Tree, void *Data);
void BST_RemoveNode(void *Tree, void **Data, uint32_t KeyValue);
void BST_SearchNode(void *Tree, void **Data, uint32_t KeyValue);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//辅助动作:打印一个数据集合
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
typedef void (*BST_Visit)(uint32_t CurrentNumber, uint32_t *KeySet, void **DataSet);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
//辅助动作:层序遍历,并对所有节点操作
uint32_t BST_Sequence_Traversal(void *Tree, BST_Visit Visit, uint8_t Destroy);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
