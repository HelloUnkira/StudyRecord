#ifndef TIMEROUT_QUEUE_H
#define TIMEROUT_QUEUE_H
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 超时队列:定时约减优先队列 */
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
typedef struct TimeroutNode {
    void   (*ReduceCallback)(void *Parameter);  
    void    *Parameter;
    struct   TimeroutNode *Near;
    uint32_t ReduceCount;
    uint32_t Peroid;
    uint32_t Reload:1;
} TQ_Node;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
typedef struct TimeroutQueue {
    void   (*EventThrowCallback)(TQ_Node *Node);
    TQ_Node *List;
} TQ_Queue;
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 静态配置超时项 */
#define TQ_Node_CONFIGURE(CALLBACK, PARAMETER, PEROID, RELOAD)  \
{                                                               \
    .ReduceCallback = CALLBACK,     /* 约减到0时执行回调 */     \
    .Parameter      = PARAMETER,    /* 执行回调的参数 */        \
    .Peroid         = PEROID,       /* 约减周期 */              \
    .Reload         = RELOAD,       /* 是否自动重加载 */        \
    .ReduceCount    = PEROID,                                   \
    .Near           = NULL,                                     \
}                                                               \
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 动态配置超时项 */
static inline void TQ_Node_Configure(TQ_Node *Node,
                                     void   (*Callback)(void *Parameter),
                                     void    *Parameter,
                                     uint32_t Peroid,
                                     bool     Reload)
{
    Node->ReduceCallback = Callback;
    Node->Parameter      = Parameter;
    Node->Peroid         = Peroid;
    Node->Reload         = Reload;
    Node->ReduceCount    = Peroid;
    Node->Near           = NULL;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
static inline void TQ_Queue_Configure(TQ_Queue *Queue, void (*Callback)(TQ_Node *Node))
{
    Queue->EventThrowCallback = Callback;
    Queue->List = NULL;
}
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 停止,中止,终止超时项(如果它还在运行,否则什么也不做) */
void TQ_Node_Stop(TQ_Queue *Queue, TQ_Node *Node);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 启动超时队项(如果它还在运行,否则什么也不做) */
bool TQ_Node_Start(TQ_Queue *Queue, TQ_Node *Node);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 约减超时队列(将它挂到硬件定时器回调中,通过回调投掷定时器事件)*/
void TQ_Node_Reduce(TQ_Queue *Queue);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
/* 运行超时项(将它挂到线程中调用,处理从硬件中断中投递过来的定时器事件) */
void TQ_Node_Execute(TQ_Node *Node);
/*************************************************************************************************/
/*************************************************************************************************/
/*************************************************************************************************/
#endif
