目标:
    实现高并发,功能可裁剪,模块高内聚的,以多线程和工作队列为基础的
    嵌入式操作系统层级的上层架构
    依赖于操作系统本身提供的各种同步原语以及
    功能强大的各种容器为各个上层模块提供一种
    相对合适的地基,保证子模块的绝对独立化和高内聚
    
依赖:
    嵌入式操作系统的:多线程,定时器,部分同步原语
    
    
根据实际的情况,
一个嵌入式操作系统应用上层应该具备以下的几个线程:
    //注意优先级关系:
    1.(1)一个中断处理线程,紧急中断可以本地处理数据,非紧急
         中断或需要向应用上层发送额外数据时,中断应该打包数据传入到
         该线程
    2.(2)一个控制线程,用于协调其他线程间的数据流通信所用
         内部应该有一个实现,用于将各个线程能处理的数据精准的派送

    3.(2—3)一个传感器线程,被派送的包裹会被处理,包括启用传感器,传感器
         获取数据后打包派送到其余位置

    4.(3~...)其余的线程,用于处理被派送过来的包裹,完成对应的动作






